name: CI - Tests & Quality

on:
  pull_request:
    branches: [ main, release/* ]
  #push:
    #branches: [ main, test/*, fix/*, feat/*, docs/*, release/* ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: windows-latest
    timeout-minutes: 20
    
    steps:
    - name: Debug workflow trigger
      run: |
        echo "=== Workflow Debug Information ==="
        echo "Event: ${{ github.event_name }}"
        echo "Branch: ${{ github.ref }}"
        echo "Target Branch: ${{ github.base_ref }}"
        echo "Repository: ${{ github.repository }}"
        echo "Actor: ${{ github.actor }}"
        echo "================================="
        
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run comprehensive unit tests
      run: |
        echo "=== Starting Unit Tests ==="
        echo "Working Directory: $PWD"
        echo "Python Version: $(python --version)"
        echo "Available test files:"
        Get-ChildItem -Path "tests" -Name "*.py" | ForEach-Object { echo "  - $_" }
        echo "=== Executing test runner ==="
        python scripts/run_tests.py
        echo "=== Unit tests completed successfully ==="
        
    - name: Test import structure
      run: |
        python -c "import sys; sys.path.append('src'); import main; print('Main module imports successfully')"
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          logs/
          test-results.xml
        retention-days: 30

    - name: Comment test results on PR  
      uses: actions/github-script@v6
      if: always() && github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          
          // Determine test status based on previous step
          const testJobStatus = '${{ job.status }}';
          let testStatus = testJobStatus === 'success' ? 'All tests passed' : 'Some tests failed';
          let testDetails = testJobStatus === 'success' 
            ? 'All 61 unit tests completed successfully!' 
            : 'Some tests failed. Please check the workflow logs for details.';
          
          const body = '## Test Results\n\n' +
            '**Status**: ' + testStatus + '\n\n' +
            '<details>\n' +
            '<summary>Test Details</summary>\n\n' +
            '```\n' +
            testDetails + '\n\n' +
            'Event: ${{ github.event_name }}\n' +
            'Branch: ${{ github.ref }}\n' +
            'Target: ${{ github.base_ref }}\n' +
            'Commit: ${{ github.sha }}\n' +
            '```\n\n' +
            '</details>\n\n' +
            '---\n' +
            '*Automated by GitHub Actions CI/CD Pipeline*';

          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
            console.log('Comment posted successfully');
          } catch (error) {
            console.log('Error posting comment:', error.message);
          }
